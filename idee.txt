Idee: es wird das prototypisch umgesetzt, wie elon den Teslabesituern ermöglichen will, kohle zu verdiene.

Das geht so:
- Der Besitzer eines Teslas meldet sein Fahrzeug als Sharebar (e.g. er braucht es gerade nicht)
- Jemand der sich irgendwohin bringen lassen will, bucht einfach einen Tesla und lässt sich fahren
    er muss es ja nicht selbst, die fahren ja autonom. Der Kunde zahl dafür und das bringt dem
    Tesla-Besitzer Geld


- Aus Sicht des Tesla-Besitzers:
    - er meldet seinen tesla als "frei" von x bis y
    - der Tesla meldet sein Position
    - der Tesla meldet seinen Ladezustand (aus dem sich die maximale Reichweite berechnen lässt)
    - der Tesla nimmt fahrten an, wenn der Ladezustand reicht, um zum Kunden zu fahren, den Kunden
      an den Zielort zu bringen und wieder zu seinem Besitzer zurück zu fahren.
    - der Tesla Besitzer kann sehen, wo sein tesla gerade ist
    - er kann sehen, wie viel er verdient hat (in Summe und pro Fahrt - er sieht also alle
      durchgeführten Fahrten, von wo nach wo und wieviel er damit verdient hat)


- Aus Sich des Kunden:
    - er ordert einen Transport von A nach B (ohne weitere Parameter, damit es einfach bleibt)
    - er bekommt den Preis angezeigt und die Wartezeit, bis der Tesla bei ihm ist
    - er nimmt auf jeden fall an - damit es einfach bleibt
    - er sieht wie der tesla zu ihm fährt

- Aus Sicht des Systems
    - muss eine Liste aller verfügbaren Tesla halten
        - muss wissen wie die Reichweite ist
        - muss wissen, wann er wieder an der Ausgangsposition sein soll
        - muss wissen wo er sich befindet.
        - muss wissen, ob gerade ein Transport durchgeführt wird und wann dieser wo beendet wird.
    - muss den Bedarf für einen Transport von einem Kunden entgegen nehmen
        (Kunde will von A nach B - immer jetzt sofort - also keine Vorabbuchung, dmait es
        einfach bleibt)
    - muss prüfen, ob es sich um eine gültige Anforderung handelt
        - fraud detection: ein KI Model ist noch nicht trainiert - also muss eine Heuristik her:
            - der bedarf eines Users wird nicht akzeptiert, wenn der neue Bedarf vom letzte
              Endpunkt soweit entfernt ist, dass er nicht mit 15Km/h erreichbar wäre
              - 15km/h = Schätzung für die Entfernung, die man in einer Stadt zurücklegen kann (inkl.
               ausseteigen, laufen, Öffis, Taxi - reine Vermutung)
    - muss prüfen, ob es einen Tesla gibt, der den Bedarf erfüllen kann (inkl. Rückfahrt und Ladezustand)
    - schickt den Tesla zum Bedraf
    - wartet darauf, dass die Fahrt beendet ist
    - dann:
        - Lässt den Tesla dort wo er ist
        - schickt ihn zum Ausgangsort, weil er vom Besitzer benäötigt wird
        - schickt ihn zu nächsten Ladestattion
          (e.g. das ist auch nur ein Bedarf, der Ausgaben statt Einnahmen verursacht)

    - führt zu jedem tesla eine Liste mit den durchgeführten Fahrten und
      Aufladungen inkl. Ausgaben und Einnhamne
    - führt zu jedem Kunden eine Liste mit den durchgeführten Fahrten und den Ausgaben
    - kann anzeigen, wo sich die Teslas gerade befinden
    - kann anzeigen, wie sich die teslas bewegen und ob sie leer oder besetzt fahren und wie
      der Ladezustand ist. Außerdem sieht man, wie lange sie noch im angebit sind
    - hat einen Realtime-Chart, der anzeigt, wie viele Kunden gerade befördert werden
      und wie viele Teslas gerade als Angebot zur Verfügung stehen.


- Aufladen lassen wir erst mal weg - weil dann Ladestationen hinzugefügt werdne müssten


Technisches:
 - zeigen wie trcing funktioniert?
 - zeigen wie man stream processoren stoppen kann und wie ihr lag aussieht und ob sie up oder down
   sind
 - zeigen was eine DLQ ist


 Das Ganze soll als Simulation funktionieren:
  - alle Kunden und alle Teslas werden vorab befüllt
  - für jeden Tesla wird simuliert:
    - von wann bis wann er als Angebot zur Verfühung steht
    - jedes mal wenn er in den Zustand "im Angebot" wechselt wird ein ladezustand zufällig angenommen
    - der Ladezustand ändert sich nur wenn er fährt.  State of Charge (SoC) in %
      70kWh reichen für 440km
  - für jeden Kunden wird simuliert:
    - Bedarf von A nach B - nach jedem Bedarf 30 minuten warten
  - als Spielwiese wird ein rechteckiger Bereich definiert, in dem alle Tesla und alle Bedarf liegen müssen.
    wie wäre es mit Oslo und Umland?

  - die Routen werden per Directions-Api berechnet inkl.deren Dauer
  - die Geschwindigkeit wird konstant angestezt (Länge / Dauer) und
    dann die Positionen der Fahrt simuliert

  was angezeigt wird, erfolgt dann nach und nach.

  kfleet
