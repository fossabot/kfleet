server:
  port: 8081
spring:
  application:
    name: dispatcher

spring.cloud.stream.bindings.cars:
  destination: cars

spring.cloud.stream.kafka.streams.bindings.cars:
  consumer:
    materializedAs: all-cars
    #valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde
    #keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde

# needed for interative query if the key is not on this host
spring.cloud.stream.kafka.streams.binder.configuration.application.server: localhost:${server.port}
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms: 100
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde

management:
  endpoints:
    web:
      exposure:
        include: "*"
