server.port: 8083
spring.application.name: car-service


spring.cloud.stream.bindings:
  cars_out:
    destination: cars
  car_events_out:
    destination: car_events

spring.cloud.stream.kafka.binder.configuration:
  key.serializer: org.apache.kafka.common.serialization.StringSerializer


spring.cloud.stream.kafka.streams.bindings.cars:
  consumer:
    applicationId: cars-service-repo
    materializedAs: all-cars

# needed for interactive queries if the key is not on this host
spring.cloud.stream.kafka.streams.binder.configuration.application.server: localhost:${server.port}
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms: 100
#error if not at least 3 broker: Number of alive brokers '1' does not meet the required replication factor '3' for the transactions state topic
#spring.cloud.stream.kafka.streams.binder.configuration.processing.guarantee: exactly_once
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde


management.endpoints.web.exposure.include: "*"

logging.level.org: WARN
logging.level.io.kfleet: DEBUG

cars.service.simulation.enabled: false
